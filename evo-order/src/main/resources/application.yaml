server:
  port: ${PORT:80}
  servlet:
    context-path: ${SERVICE_PATH:/}

spring:
  swagger:
    enabled: ${SWAGGER_ENABLED:false}
  application:
    name: order
  profiles:
    active: ${ENV:local}
  thymeleaf:
    cache: true
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
      WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: false
  data:
    redis:
      repositories:
        enabled: false
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: update
      generate_statistics: true
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${POSTGRES_URI:jdbc:}
    username: ${POSTGRES_USER:}
    password: ${POSTGRES_PASSWORD:}
    hikari:
      maximum-pool-size: ${CONNECTION_POOL_SIZE:32}
  sql:
    init:
      enabled: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:123456a@}
    timeout: 15s
  cache:
    type: redis
    redis:
      time-to-live: 60m
    custom-cache:
      user-authority:
        time-to-live: 1m
      client-token:
        time-to-live: 5m
      auth-login-fail-count:
        time-to-live: 30m
      auth-blocked-user:
        time-to-live: 30m
      invalid-access-token:
        time-to-live: 30m
      invalid-refresh-token:
        time-to-live: 30m

feign:
  circuitbreaker:
    enabled: true

app:
  iam:
    client:
      authenticate-uri: /api/client/authenticate
      client-id: f11d2c50-155b-4180-81c8-c090d683cd84
      client-secret: H5cXrCoyYWzdUM650vYO3J4rPJoxChq6xRpSZTnMMcSR8VOsSruy8NVj1lAU4ebYAEZFTu67yIOnbx1ZQG8QCD936PxZLutNOSIl
    deep-link-reset-password: evo://reset-password?token=%s
    domain: https://api.evotek.vn

#db-scheduler:
#  enabled: true
#  heartbeat-interval: ${HEARTBEAT_INTERVAL:5m}
#  polling-interval: ${POLLING_INTERVAL:10s} # interval to check for new jobs in db
#  polling-limit: ${POLLING_LIMIT:10} # max number of jobs to process in one polling
#  table-name: ${TABLE_NAME:SCHEDULED_TASK}
#  immediate-execution-enabled: ${IMMEDIATE_EXECUTION_ENABLED:true} # if true, immediate execution will be enabled
#  scheduler-name: ${SCHEDULER_NAME:db-scheduler}
#  threads: ${THREADS:10}
#  shutdown-max-wait: 3m
